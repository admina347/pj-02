// <auto-generated />
using System;
using EF.DataAccessLibrary.Dataaccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF.DataAccessLibrary.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230122072905_ChRelationship")]
    partial class ChRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("AuthorsId")
                        .HasColumnType("int");

                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("BookGenre");
                });

            modelBuilder.Entity("EF.DataAccessLibrary.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Александр",
                            LastName = "Беляев"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Александр",
                            LastName = "Грибоедов"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Александр",
                            LastName = "Грин"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Александр",
                            LastName = "Дюма"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Александр",
                            LastName = "Островский"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Александр",
                            LastName = "Пушкин"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Алексей",
                            LastName = "Толстой"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Антон",
                            LastName = "Чехов"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Аркадий",
                            LastName = "Стругацкий"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Артур",
                            LastName = "Конан Дойль"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Борис",
                            LastName = "Васильев"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Борис",
                            LastName = "Пастернак"
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Борис",
                            LastName = "Стругацкий"
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "Валентин",
                            LastName = "Катаев"
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Вениамин",
                            LastName = "Каверин"
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "Виктор",
                            LastName = "Гюго"
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Владимир",
                            LastName = "Богомолов"
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Владимир",
                            LastName = "Обручев"
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Габриэль",
                            LastName = "Гарсиа Маркес"
                        },
                        new
                        {
                            Id = 21,
                            FirstName = "Григорий",
                            LastName = "Белых"
                        },
                        new
                        {
                            Id = 22,
                            FirstName = "Даниель",
                            LastName = "Дефо"
                        },
                        new
                        {
                            Id = 23,
                            FirstName = "Джек",
                            LastName = "Лондон"
                        },
                        new
                        {
                            Id = 24,
                            FirstName = "Джордж",
                            LastName = "Оруэлл"
                        },
                        new
                        {
                            Id = 25,
                            FirstName = "Евгений",
                            LastName = "Петров"
                        },
                        new
                        {
                            Id = 26,
                            FirstName = "Жюль",
                            LastName = "Верн"
                        },
                        new
                        {
                            Id = 27,
                            FirstName = "Иван",
                            LastName = "Гончаров"
                        },
                        new
                        {
                            Id = 28,
                            FirstName = "Иван",
                            LastName = "Тургенев"
                        },
                        new
                        {
                            Id = 29,
                            FirstName = "Илья",
                            LastName = "Ильф"
                        },
                        new
                        {
                            Id = 30,
                            FirstName = "Иоганн",
                            LastName = "Вольфганг фон Гёте"
                        },
                        new
                        {
                            Id = 31,
                            FirstName = "Константин",
                            LastName = "Симонов"
                        },
                        new
                        {
                            Id = 32,
                            FirstName = "Лев",
                            LastName = "Толстой"
                        },
                        new
                        {
                            Id = 33,
                            FirstName = "Леонид",
                            LastName = "Филатов"
                        },
                        new
                        {
                            Id = 34,
                            FirstName = "Л.",
                            LastName = "Пантелеев"
                        },
                        new
                        {
                            Id = 35,
                            FirstName = "Марк",
                            LastName = "Твен"
                        },
                        new
                        {
                            Id = 36,
                            FirstName = "Михаил",
                            LastName = "Булгаков"
                        },
                        new
                        {
                            Id = 37,
                            FirstName = "Михаил",
                            LastName = "Лермонтов"
                        },
                        new
                        {
                            Id = 38,
                            FirstName = "Михаил",
                            LastName = "Шолохов"
                        },
                        new
                        {
                            Id = 39,
                            FirstName = "Николай",
                            LastName = "Гоголь"
                        },
                        new
                        {
                            Id = 40,
                            FirstName = "Станислав",
                            LastName = "Лем"
                        },
                        new
                        {
                            Id = 41,
                            FirstName = "Федор",
                            LastName = "Достоевский"
                        },
                        new
                        {
                            Id = 42,
                            FirstName = "Шарлотта",
                            LastName = "Бронте"
                        },
                        new
                        {
                            Id = 43,
                            FirstName = "Эрих Мария",
                            LastName = "Ремарк"
                        },
                        new
                        {
                            Id = 44,
                            FirstName = "Эрнест",
                            LastName = "Хемингуэй"
                        },
                        new
                        {
                            Id = 45,
                            FirstName = "Юлиан",
                            LastName = "Семенов"
                        });
                });

            modelBuilder.Entity("EF.DataAccessLibrary.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("EF.DataAccessLibrary.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("EF.DataAccessLibrary.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF.DataAccessLibrary.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.HasOne("EF.DataAccessLibrary.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF.DataAccessLibrary.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EF.DataAccessLibrary.Models.Book", b =>
                {
                    b.HasOne("Models.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
